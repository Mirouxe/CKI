const mongoose = require('mongoose');
const User = require('./models/User');
const SeenCelebrity = require('./models/SeenCelebrity');
require('dotenv').config();

async function testConnection() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connexion √† MongoDB r√©ussie');
    
    // Compter les utilisateurs
    const userCount = await User.countDocuments();
    console.log(`üìä Nombre d'utilisateurs dans la base de donn√©es: ${userCount}`);
    
    // Afficher les utilisateurs
    const users = await User.find({});
    console.log('\nüìã Liste des utilisateurs:');
    users.forEach(user => {
      console.log(`- ${user.firstname} ${user.lastname} (score: ${user.score})`);
    });
    
    // Compter les c√©l√©brit√©s vues
    const seenCount = await SeenCelebrity.countDocuments();
    console.log(`\nüé¨ Nombre de c√©l√©brit√©s vues: ${seenCount}`);
    
    // Afficher quelques c√©l√©brit√©s vues (limit√© √† 5)
    if (seenCount > 0) {
      const seenCelebrities = await SeenCelebrity.find({}).limit(5);
      console.log('\nüé≠ Exemples de c√©l√©brit√©s vues:');
      for (const seen of seenCelebrities) {
        const user = await User.findOne({ id: seen.user_id });
        const userName = user ? `${user.firstname} ${user.lastname}` : 'Utilisateur inconnu';
        console.log(`- ${seen.celebrity_name} (vue par: ${userName}, trouv√©e: ${seen.found ? 'Oui' : 'Non'})`);
      }
    }
    
    console.log('\n‚úÖ Test de connexion termin√© avec succ√®s');
  } catch (error) {
    console.error('‚ùå Erreur lors du test de connexion:', error);
  } finally {
    // Fermer la connexion
    await mongoose.disconnect();
    console.log('üîå Connexion √† MongoDB ferm√©e');
  }
}

// Ex√©cuter le test
testConnection(); 