const mongoose = require('mongoose');
const User = require('./models/User');
const SeenCelebrity = require('./models/SeenCelebrity');
require('dotenv').config();

async function testCelebrityOperations() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connexion √† MongoDB r√©ussie');
    
    // R√©cup√©rer l'utilisateur de test
    const testUser = await User.findOne({ firstname: 'Test', lastname: 'Utilisateur' });
    
    if (!testUser) {
      console.log('‚ùå Utilisateur de test non trouv√©. Veuillez d\'abord ex√©cuter test-create-user.js');
      return;
    }
    
    console.log('üìã Utilisateur de test trouv√©:', testUser.firstname, testUser.lastname);
    
    // Cr√©er une entr√©e de c√©l√©brit√© vue
    const celebrity = new SeenCelebrity({
      user_id: testUser.id,
      celebrity_name: 'anthony_hopkins',
      seen_date: new Date(),
      found: true
    });
    
    // Sauvegarder la c√©l√©brit√© vue
    await celebrity.save();
    console.log('‚úÖ C√©l√©brit√© vue cr√©√©e avec succ√®s');
    
    // R√©cup√©rer les c√©l√©brit√©s vues par l'utilisateur
    const seenCelebrities = await SeenCelebrity.find({ user_id: testUser.id });
    console.log(`üìä Nombre de c√©l√©brit√©s vues par l'utilisateur: ${seenCelebrities.length}`);
    console.log('üìã C√©l√©brit√©s vues:', seenCelebrities);
    
    console.log('\n‚úÖ Test des op√©rations sur les c√©l√©brit√©s termin√© avec succ√®s');
  } catch (error) {
    console.error('‚ùå Erreur lors du test des op√©rations sur les c√©l√©brit√©s:', error);
  } finally {
    // Fermer la connexion
    await mongoose.disconnect();
    console.log('üîå Connexion √† MongoDB ferm√©e');
  }
}

// Ex√©cuter le test
testCelebrityOperations(); 